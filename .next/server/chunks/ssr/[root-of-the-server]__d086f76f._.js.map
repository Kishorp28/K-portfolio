{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///D:/attempt/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firestore\r\nconst db = getFirestore(app);\r\n\r\n// Initialize Analytics only on client side\r\nlet analytics: any = null;\r\n\r\nif (typeof window !== 'undefined') {\r\n  // Only import and initialize analytics on the client side\r\n  import('firebase/analytics').then(({ getAnalytics }) => {\r\n    try {\r\n      analytics = getAnalytics(app);\r\n    } catch (error) {\r\n      console.warn('Analytics initialization failed:', error);\r\n    }\r\n  }).catch((error) => {\r\n    console.warn('Failed to load analytics:', error);\r\n  });\r\n}\r\n\r\nexport { app, db, analytics }; "],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ,QAAQ,GAAG,CAAC,4BAA4B;IAChD,YAAY,QAAQ,GAAG,CAAC,gCAAgC;IACxD,WAAW,QAAQ,GAAG,CAAC,+BAA+B;IACtD,eAAe,QAAQ,GAAG,CAAC,mCAAmC;IAC9D,mBAAmB,QAAQ,GAAG,CAAC,wCAAwC;IACvE,OAAO,QAAQ,GAAG,CAAC,2BAA2B;IAC9C,eAAe,QAAQ,GAAG,CAAC,mCAAmC;AAChE;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,uBAAuB;AACvB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AAExB,2CAA2C;AAC3C,IAAI,YAAiB;AAErB,uCAAmC;;AAWnC","debugId":null}}]
}